{"version":3,"sources":["doge-rentals-logo.png","components/Home.js","components/Movie.js","components/Search.js","components/Library.js","components/Customer.js","components/Customers.js","components/Rental.js","components/CustomerDetails.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Home","className","src","alt","Movie","props","imageUrl","title","releaseDate","overview","onClick","movieCallback","id","imageURL","buttonText","Search","useState","text","query","setQuery","movies","setMovies","onSubmit","event","preventDefault","axios","get","BASE_URL","then","response","data","length","console","log","moviesCopy","map","movie","key","external_id","image_url","release_date","addMovieCallback","catch","error","onSearch","alert","type","name","placeholder","value","onChange","target","Library","movieComponents","selectMovieCallback","Customer","to","address","city","state","postalCode","phone","moviesCheckedOutCount","selectCustomerCallback","Customers","customerComponents","customers","customer","i","accountCredit","registeredAt","Rental","checkoutDate","dueDate","returned","returnRentalCallback","customerId","CustomerDetails","rentalList","setRentalList","setCustomer","errorMessage","setErrorMessage","flash","setFlash","findCustomer","currentCustomerName","newCustomer","find","toLowerCase","getCustomer","currentRentalList","rentalsCopy","rental","customer_id","checkout_date","due_date","returnRental","cause","movieTitle","post","setTimeout","customerCopy","App","setCustomers","selectedCustomer","setSelectedCustomer","selectedMovie","setSelectedMovie","rentalInfo","setRentalInfo","rentals","setRentals","addCustomers","customerObjects","account_credit","postal_code","movies_checked_out_count","registered_at","errors","addMovies","movieObjects","useEffect","onFormSubmit","Date","getTime","newRental","push","makeRental","href","logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","movieInfo","currentMovie","clickedCustomer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","component","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc32453f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doge-rentals-logo.32fa3255.png\";","import React from 'react';\nimport './Home.css';\n\nconst Home = () => {\n  return (\n    <div className=\"main-page body-container\">\n      <img className=\"shiba-img\" src={\"https://i.imgur.com/wfbujRm.png\"} alt=\"shiba\"/>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\nconst Movie = (props) => {\n  const onSelectMovie = () => {\n    return props.movieCallback({id: props.id, title: props.title, overview: props.overview, imageURL: props.imageUrl, releaseDate: props.releaseDate});\n  };\n\n  return (\n    <div className=\"movie-container col-3 text-center mb-3 p-3\">\n      <div className=\"flipper\">\n        <div className=\"front\">\n          <div className=\"\">\n            <img src={props.imageUrl} alt={props.title} className=\"movie-poster mb-3\" /> \n            <h3 className=\"movie-title\">{props.title}</h3>\n            <p className=\"release-date\"><strong>Released</strong>: {props.releaseDate}</p>\n          </div>\n        </div>\n        <div className=\"back d-flex flex-column mx-auto\">\n          <img src={props.imageUrl} alt={props.title} className=\"image-background mx-auto\" /> \n          <div className=\"back-container p-3\">\n            <div className=\"back-inside-container\">\n              <p className=\"movie-overview\">{props.overview}</p>\n              <button className=\"button-bg\" onClick={onSelectMovie}>{props.buttonText}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  overview: PropTypes.string,\n  releaseDate: PropTypes.string,\n  title: PropTypes.string,\n  buttonText: PropTypes.string,\n  movieCallback: PropTypes.func.isRequired\n};\n\nexport default Movie;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport './Search.css';\n\nimport Movie from './Movie';\n\nconst Search = (props) => {\n  const BASE_URL = \"http://localhost:3000/\";\n  \n  const [query, setQuery] = useState({text: \"\"});\n  const [movies, setMovies] = useState([]);\n    \n  const onSearch = query => {    \n    axios.get(BASE_URL + \"movies?query=\" + query)\n      .then((response) => {\n        if (response.data.length === 0) {\n          console.log(\"no movies found\");\n        } else {\n          let moviesCopy = response.data.map(movie => {\n            return (\n              // <section key={movie.external_id}>\n                <Movie \n                  key={movie.external_id}\n                  id={movie.external_id}\n                  imageUrl={movie.image_url}\n                  overview={movie.overview}\n                  releaseDate={movie.release_date}\n                  title={movie.title}\n                  buttonText={\"Add movie\"}\n                  movieCallback={props.addMovieCallback}\n                />\n              // </section>\n            );\n          });\n          setMovies(moviesCopy);\n        }\n      })\n      .catch((error) => {\n        // setErrorMessage(\"error: \" + error.cause);\n        console.log(\"failed search: \" + error);\n      })    \n    }\n    \n  const onInputChange = event => {\n    setQuery({text: event.target.value});\n  }\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    // to ensure users can never send a bad request\n    if (query.text === \"\") {\n      alert(\"To make a search, please enter some text!\");\n      return;\n    };    \n\n    onSearch(query.text);\n\n    // clear text fields for next submission\n    setQuery({text: \"\"});\n  }\n  \n  return (\n    // after making search, can add a movie from results to rental library (local API)\n    <div className=\"search-container container\">\n      <form className=\"\" onSubmit={onSubmit}>\n      <header className=\"search-box-title\">Search the Database</header>\n        <div className=\"search-box-container\">\n          <input\n            className=\"search-box\"\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"search here\"\n            value={query.text}\n            onChange={onInputChange}\n          />\n          <input type=\"submit\" value=\"Search\" className=\"search-btn\" onSubmit={onSubmit}/>\n        </div>\n      </form>\n      <div className=\"all-movies justify-content-center container\">\n        {movies}\n      </div>\n    </div>\n  )};\n\n\n\nSearch.propTypes = {\n  movies: PropTypes.array.isRequired,\n  addMovieCallback: PropTypes.func.isRequired\n};\n\n\nexport default Search;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Library.css';\n\nimport Movie from './Movie';\n\nconst Library = (props) => {\n\n  const movieComponents = props.movies.map((movie) => {\n    return (\n      <Movie \n        key={movie.id}\n        id={movie.id}\n        imageUrl={movie.imageUrl}\n        overview={movie.overview}\n        releaseDate={movie.releaseDate}\n        title={movie.title}\n        buttonText={\"Select movie\"}\n        movieCallback={props.selectMovieCallback}\n      />\n    );\n  });\n\n\n  return (\n    // can see a list of all movies in the rental library - make a call to the internal video store API?\n\n    // can select a movie from the rental library\n    // selection will then be visible across the app - use a state to store this info?\n    <div className=\"library-container container\">\n      <h1 className=\"library-title\">Library</h1>\n      <div className=\"all-movies justify-content-center\">{movieComponents}</div>\n    </div>\n  );\n};\n\n\nLibrary.propTypes = {\n  movies: PropTypes.array.isRequired,\n  selectMovieCallback: PropTypes.func.isRequired,\n};\n\n            \n\nexport default Library;","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Customer.css';\n\n\nconst Customer = (props) => {\n  const onSelectClick = () => {    \n    props.selectCustomerCallback(props);    \n  };\n  \n  return (\n    <div className=\"customer-container\">\n      <img src={\"https://placedog.net/200/200/\" + props.id} alt=\"dog\" className=\"rounded-circle\" />\n      \n\n      <div className=\"customer-info\">\n        <h4 className=\"customer-name\"><Link to={`/customerdetails`} className=\"customer-name\">\n        {props.name}\n        </Link></h4>\n        <p className=\"gray-font\">{props.address}</p>\n        <p className=\"gray-font\">{props.city}, {props.state} {props.postalCode}</p>\n        <p className=\"gray-font\">{props.phone}</p>\n        <p><strong>Movies Checked Out: </strong>{props.moviesCheckedOutCount}</p>\n      </div>\n\n      <button className=\"button-bg\" onClick={onSelectClick}>\n        Select Customer\n      </button>\n    </div>\n  );\n};\n\n\nCustomer.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  accountCredit: PropTypes.number,\n  moviesCheckedOutCount: PropTypes.number,\n  phone: PropTypes.string,\n  address: PropTypes.string,\n  postalCode: PropTypes.string,\n  registeredAt: PropTypes.string,\n  state: PropTypes.string,\n  city: PropTypes.string,\n  selectCustomerCallback: PropTypes.func.isRequired,\n};\n\n\nexport default Customer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Customer from './Customer';\n\nimport './Customers.css';\n\n\nconst Customers = (props) => {\n  \n  const customerComponents = props.customers.map((customer, i) => {\n    return (\n      <section key={customer.id} className=\"customer-components\">\n        <Customer \n          id={customer.id}\n          name={customer.name}\n          accountCredit={customer.accountCredit}\n          moviesCheckedOutCount={customer.moviesCheckedOutCount}\n          phone={customer.phone}\n          address={customer.address}\n          postalCode={customer.postalCode}\n          registeredAt={customer.registeredAt}\n          state={customer.state}\n          city={customer.city}\n          selectCustomerCallback={props.selectCustomerCallback}\n        />\n      </section>\n    );\n  });\n\n  return (\n    <div className=\"customers-container\">\n      <h1 className=\"customers-title\">Customers</h1>\n      <div className=\"customer-components\">{customerComponents}</div>\n    </div>\n  );\n};\n\n\nCustomers.propTypes = {\n  customers: PropTypes.array.isRequired,\n  selectCustomerCallback: PropTypes.func.isRequired\n};\n\n\nexport default Customers;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport './Rental.css';\n\n\nconst Rental = (props) => {\n  return (      \n    <tr key={props.id}>\n      <td>{props.name}</td>\n      <td></td>\n      <td></td>\n      <td>{props.title}</td>\n      <td></td>\n      <td></td>\n      <td>{props.checkoutDate}</td>\n      <td></td>\n      <td></td>\n      <td>{props.dueDate}</td>\n      <td></td>\n      <td></td>\n      <td>{props.returned === true ? 'true' : 'false'}</td>\n      <td></td>\n      <td>\n        {\n          (props.returned === false) && <button onClick={() => props.returnRentalCallback(props.title, props.customerId)} className=\"button-bg return-btn\">Return</button>\n        }\n      </td>\n    </tr>\n  );\n};\n\nRental.propTypes = {\n  customerId: PropTypes.number.isRequired,\n  checkoutDate: PropTypes.string.isRequired,\n  dueDate: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  returned:  PropTypes.bool.isRequired,\n  title:  PropTypes.string.isRequired,\n  returnRentalCallback: PropTypes.func.isRequired,\n};\n                  \nexport default Rental;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport Rental from './Rental';\nimport './CustomerDetails.css';\n\n\nconst CustomerDetails = (props) => {\n  const BASE_URL = \"http://localhost:3000/\";\n  \n  const [rentalList, setRentalList] = useState([]);\n  const [customer, setCustomer] = useState({name: ''});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [flash, setFlash] = useState(\"\");\n    \n  const onInputChange = event => {\n    const {value} = event.target; \n    const customerCopy = {...customer}\n\n    customerCopy.name = value;\n    setCustomer(customerCopy);\n\n  };\n\n  const findCustomer = (currentCustomerName) => {\n    const newCustomer = props.customers.find((customer) => {\n      return customer.name.toLowerCase() === currentCustomerName.toLowerCase();\n    });\n\n    if (!newCustomer) {\n      setErrorMessage('No customer match found');\n    } else {\n      setCustomer(newCustomer);\n      getCustomer(newCustomer.id);\n    }\n  } \n\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    findCustomer(customer.name);\n\n    // clear text fields for next submission\n    // setCustomer({});\n  }\n\n  const getCustomer = (customerId) => {    \n    \n    axios.get(`${BASE_URL}customers/${customerId}`)\n      .then((response) => {\n        const currentRentalList = response.data;\n\n        if (currentRentalList.length === 0) {\n          setErrorMessage(\"no rentals found\");\n        } else {\n          const rentalsCopy = currentRentalList.map(rental => {\n\n            return (\n              // <section key={rental.id}>\n                <Rental \n                  key={rental.id}\n                  customerId={rental.customer_id}\n                  checkoutDate={rental.checkout_date}\n                  dueDate={rental.due_date}\n                  name={rental.name}\n                  returned={rental.returned}\n                  title={rental.title}\n                  returnRentalCallback={returnRental}\n                />\n            // </section>\n            );\n          });\n\n          setRentalList(rentalsCopy);\n        }\n\n        \n      })\n      .catch((error) => {\n        setErrorMessage(\"error: \" + error.cause);\n        // console.log(\"failed search: \" + error); // TODO\n      });    \n    };\n  \n\n  // http://localhost:3000/rentals/Psycho/return?customer_id=5\n\n  const returnRental = (movieTitle, customerId) => {\n    axios.post(BASE_URL + 'rentals/' + movieTitle + '/return?customer_id=' + customerId)\n      .then((response) => {\n        findCustomer(customer.name);\n        \n        setFlash(`${movieTitle} was succefully returned!`)\n\n        setTimeout(() => {\n          setFlash(\"\");\n        }, 3000);\n        \n      })\n      .catch((error) => {\n        setErrorMessage(\"error: \" + error.cause);\n      })\n  }\n\n  return (\n    // after making search, can add a movie from results to rental library (local API)\n    <div className=\"search-container body-container\">\n\n      {errorMessage &&\n      <div className=\"alert\">\n        <p>{errorMessage}</p>\n      </div>}\n\n      {flash && <p className=\"flash-message\">{flash}</p>}\n\n      <form className=\"\" onSubmit={onSubmit}>\n        <header className=\"search-box-title\">Search for customer details</header>\n        <div className=\"search-box-container\">\n          <input\n            className=\"search-box\"\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"search here\"\n            onChange={onInputChange}\n            value={customer.name}\n          />\n          <input type=\"submit\" value=\"Search\" className=\"search-btn\" />\n        </div>\n      </form>\n\n      {\n        rentalList && customer &&\n        <div className=\"rental-list\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th></th>\n                <th></th>\n                <th>Title</th>\n                <th></th>\n                <th></th>\n                <th>Checkout Date</th>\n                <th></th>\n                <th></th>\n                <th>Due Date</th>\n                <th></th>\n                <th></th>\n                <th>Returned</th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {rentalList}\n            </tbody>\n          </table>\n        </div>\n      }\n    </div>\n  )};\n\n\nCustomerDetails.propTypes = {\n  customers: PropTypes.array.isRequired,\n};\n      \n\n\nexport default CustomerDetails;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Link, BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport logo from './doge-rentals-logo.png';\n\nimport './App.css';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport Library from './components/Library';\nimport Customers from './components/Customers';\nimport CustomerDetails from './components/CustomerDetails';\n\nconst BASE_URL = \"http://localhost:3000/\";\n\nconst App = () => {\n  const[movies, setMovies] = useState([]);\n  const[customers, setCustomers] = useState([]);\n\n  const[selectedCustomer, setSelectedCustomer] = useState({name: \"N/A\"});\n  const[selectedMovie, setSelectedMovie] = useState({title: \"N/A\"});\n  \n  const[flash, setFlash] = useState({text: \"\", type: \"\"});\n  const[rentalInfo, setRentalInfo] = useState({\n    customer: null,\n    movie: null,\n    checkoutDate: null,\n    dueDate: null,\n    returned: false\n  });\n  const[rentals, setRentals] = useState([]);\n\n  const addCustomers = () => {\n    axios.get(BASE_URL + \"customers/\")\n    .then((response) => {\n      const customerObjects = response.data.map((customer, i) => {\n        return {\n          id: customer.id,\n          name: customer.name,\n          accountCredit: customer.account_credit,\n          address: customer.address,\n          city: customer.city,\n          state: customer.state,\n          postalCode: customer.postal_code,\n          moviesCheckedOutCount: customer.movies_checked_out_count,\n          phone: customer.phone,\n          registeredAt: customer.registered_at,\n        }\n      });\n      setCustomers(customerObjects);\n    })\n    .catch((error) => {\n      setFlash({text: `Failed to add customers: ${error.response.data.errors}`, type: \"failure\"});\n\n      setTimeout(() => {\n        setFlash({text: \"\", type: \"\"});\n      }, 3000);\n    });\n  }\n\n  const addMovies = () => {\n    axios.get(BASE_URL + \"movies/\")\n    .then((response) => {\n      const apiData = response.data;\n      const movieObjects = apiData.map((movie, i) => {\n        return {\n          // externalId: movie.external_id,\n          id: movie.id,\n          imageUrl: movie.image_url,\n          overview: movie.overview,\n          releaseDate: movie.release_date,\n          title: movie.title\n        }\n      });\n      setMovies(movieObjects);\n    })\n    .catch((error) => {\n      setFlash({text: `Failed to add movie: ${error.response.data.errors}`, type: \"failure\"});\n\n      setTimeout(() => {\n        setFlash({text: \"\", type: \"\"});\n      }, 3000);\n    });\n  }\n\n  // on initial load, add customers and movies from API\n  useEffect(addCustomers, []);\n  useEffect(addMovies, []);\n\n\n  // Date - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n  // Add date - https://stackoverflow.com/questions/3818193/how-to-add-number-of-days-to-todays-date\n  const makeRental = () => {  // movieInfo, customerInfo\n    const checkoutDate = new Date();\n\n    const dueDate = new Date(new Date().getTime() + (7 * 24 * 3600 * 1000));\n\n    const newRental = {...rentalInfo}\n\n    newRental.checkoutDate = checkoutDate; \n    newRental.dueDate = dueDate; \n    newRental.movie = selectedMovie;\n    newRental.customer = selectedCustomer;\n\n\n    if (selectedMovie.title && selectedCustomer.id) {\n      axios.post(BASE_URL + \"rentals/\" + selectedMovie.title + \"/check-out?customer_id=\" + selectedCustomer.id + \"&due_date=\" + dueDate)\n        .then((response) => {\n          setRentalInfo(newRental);\n\n          // TODO\n          const rentalsCopy = [...rentals];\n          rentalsCopy.push(newRental);\n          setRentals(rentalsCopy);\n\n\n          addCustomers();\n\n\n          setSelectedCustomer({name: \"N/A\"});\n          setSelectedMovie({title: \"N/A\"});\n          setFlash({text: `${selectedMovie.title} has been checked out to ${selectedCustomer.name}!`, type: \"success\"});\n          \n          setTimeout(() => {\n            setFlash({text: \"\", type: \"\"});\n          }, 3000);\n\n          // console.log('newRental ', newRental);    \n        })\n        .catch((error) => {\n          setFlash({text: `Failed to add rental: ${error.response.data.errors}`, type: \"failure\"});\n\n          setTimeout(() => {\n            setFlash({text: \"\", type: \"\"});\n          }, 3000);\n        })    \n      }\n    }\n    \n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    makeRental();\n  };\n\n\n  const selectMovie = (movieInfo) => {\n    const currentMovie = movies.find((movie) => {\n      return movie.id === movieInfo.id\n    });\n\n    setSelectedMovie(currentMovie);\n  };\n\n  const selectCustomerCallback = (clickedCustomer) => {\n    const newCustomer = clickedCustomer\n    setSelectedCustomer(newCustomer);      \n  }\n\n  const addMovie = (movieInfo) => {\n    axios.post(BASE_URL + \"movies?\" + \n      \"title=\" + movieInfo.title + \n      \"&overview=\" + movieInfo.overview + \n      \"&release_date=\" + movieInfo.releaseDate + \n      \"&image_url=\" + movieInfo.imageURL + \n      \"&external_id=\" + movieInfo.id\n      ).then((response) => {\n        let moviesCopy = [...movies];        \n        moviesCopy.push({\n          id: response.data.id,\n          imageUrl: response.data.image_url,\n          overview: response.data.overview,\n          releaseDate: response.data.release_date,\n          title: response.data.title\n        });\n\n        addMovies();\n        setMovies(moviesCopy);\n\n        setFlash({text: `${movieInfo.title} has been added to the rental library!`, type: \"success\"})\n\n        setTimeout(() => {\n          setFlash({text: \"\", type: \"\"});\n        }, 3000);\n      })\n      .catch((error) => {          \n        setFlash({text: `Failed to add movie: ${error.response.data.errors}`, type: \"failure\"});\n\n        setTimeout(() => {\n          setFlash({text: \"\", type: \"\"});\n        }, 3000);\n      }\n    )  \n  };\n\n  const removeMovie = () => {\n    setSelectedMovie({title: \"N/A\"});\n  };\n\n  const removeCustomer = () => {\n    setSelectedCustomer({name: \"N/A\"});\n  };\n\n\n\n\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n        <Link href=\"/\" className=\"navbar-brand\">\n          <img src={logo} alt=\"dog\" className=\"navbar__logo\" />\n          Doge Rentals\n        </Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        \n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <Link to=\"/\" className=\"nav-link\" href=\"#\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/search\" className=\"nav-link\">Search</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/library\" className=\"nav-link\">Library</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/customers\" className=\"nav-link\">Customers</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/customerdetails\" className=\"nav-link\">Customer Rental History</Link>\n            </li>\n          </ul>\n        </div>\n        <form className=\"navbar-nav selected__container\" onSubmit={onFormSubmit}>\n          <div className=\"text-center m-2 selected__item\">\n            Selected Customer\n            <div className=\"selected__text\" onClick={removeCustomer}>\n              <span>{selectedCustomer.name} </span>\n            </div> \n          </div> \n          <div className=\"text-center m-2 selected__item\">\n            Selected Movie \n            <div className=\"selected__text\" onClick={removeMovie}>\n              <span>{selectedMovie.title} </span>\n            </div> \n          </div> \n          <div className=\"text-center m-2\">\n            Create Rental\n            <input type=\"submit\" value=\"Rent\" className=\"rent-btn\" onSubmit={onFormSubmit}/>   \n          </div> \n\n        </form>\n      </nav>\n\n      {flash.text && <p className={\"flash-\" + flash.type}>{flash.text}</p>}\n      \n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n        <Route path=\"/search\">\n          <Search \n            movies={movies}\n            addMovieCallback={addMovie}\n          />\n        </Route>\n        <Route exact path=\"/library\">\n          <Library \n            movies={movies}\n            selectMovieCallback={selectMovie}\n          />\n        </Route>\n        <Route exact path=\"/customers\">\n          <Customers \n            customers={customers}\n            selectCustomerCallback={selectCustomerCallback}\n          />\n        </Route>\n        <Route path={`/customerdetails`}>\n          <CustomerDetails \n            customers={customers}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n\n\n// React Router - https://www.youtube.com/watch?v=hBm5M4u2jLs&amp;index=2","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <Router>\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}